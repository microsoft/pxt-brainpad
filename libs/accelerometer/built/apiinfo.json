{
 "byQName": {
  "input": {
   "kind": 5,
   "namespace": "",
   "name": "input",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "color": "#B4009E",
    "weight": 98,
    "icon": "",
    "groups": [
     "other",
     "More"
    ],
    "paramHelp": {},
    "jsDoc": "Respond to and read data from buttons and sensors.\n\nEvents and data from sensors.",
    "block": "input"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "input"
  },
  "input.onGesture": {
   "kind": 3,
   "namespace": "input",
   "name": "onGesture",
   "attributes": {
    "paramDefl": {
     "gesture": "Gesture.Shake"
    },
    "callingConvention": 0,
    "_source": null,
    "help": "input/on-gesture",
    "blockId": "device_gesture_event",
    "block": "on |%NAME",
    "parts": "accelerometer",
    "paramFieldEditor": {
     "gesture": "gridpicker"
    },
    "paramFieldEditorOptions": {
     "gesture": {
      "width": "220",
      "columns": "3"
     }
    },
    "weight": 92,
    "blockGap": "12",
    "shim": "input::onGesture",
    "paramHelp": {
     "gesture": "the type of gesture to track, eg: Gesture.Shake",
     "body": "code to run when gesture is raised"
    },
    "jsDoc": "Do something when when a gesture is done (like shaking the board).",
    "_name": "onGesture"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "gesture",
     "description": "the type of gesture to track, eg: Gesture.Shake",
     "type": "Gesture",
     "initializer": "Gesture.Shake",
     "default": "Gesture.Shake",
     "options": {},
     "isEnum": true
    },
    {
     "name": "body",
     "description": "code to run when gesture is raised",
     "type": "() => void",
     "handlerParameters": [],
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "onGesture(Gesture.Shake, function () {})",
   "qName": "input.onGesture"
  },
  "input.acceleration": {
   "kind": 3,
   "namespace": "input",
   "name": "acceleration",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "input/acceleration",
    "blockId": "device_acceleration",
    "block": "acceleration (mg)|%NAME",
    "parts": "accelerometer",
    "paramFieldEditor": {
     "dimension": "gridpicker"
    },
    "paramFieldEditorOptions": {
     "dimension": {
      "width": "180",
      "columns": "2"
     }
    },
    "weight": 42,
    "blockGap": "8",
    "shim": "input::acceleration",
    "paramHelp": {
     "dimension": "TODO"
    },
    "jsDoc": "Get the acceleration value in milli-gravitys (when the board is laying flat with the screen up,\nx=0, y=0 and z=-1023)",
    "_name": "acceleration"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "dimension",
     "description": "TODO",
     "type": "Dimension",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "acceleration(null)",
   "qName": "input.acceleration"
  },
  "input.rotation": {
   "kind": 3,
   "namespace": "input",
   "name": "rotation",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "input/rotation",
    "blockId": "device_get_rotation",
    "block": "rotation (°)|%NAME",
    "parts": "accelerometer",
    "group": "More",
    "weight": 38,
    "shim": "input::rotation",
    "paramHelp": {
     "kind": "TODO"
    },
    "jsDoc": "The pitch or roll of the device, rotation along the ``x-axis`` or ``y-axis``, in degrees.",
    "_name": "rotation"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "kind",
     "description": "TODO",
     "type": "Rotation",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "rotation(null)",
   "qName": "input.rotation"
  },
  "input.setAccelerometerRange": {
   "kind": 3,
   "namespace": "input",
   "name": "setAccelerometerRange",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "input/set-accelerometer-range",
    "blockId": "device_set_accelerometer_range",
    "block": "set accelerometer|range %range",
    "weight": 15,
    "parts": "accelerometer",
    "group": "More",
    "blockGap": "8",
    "shim": "input::setAccelerometerRange",
    "paramHelp": {
     "range": "a value describe the maximum strengh of acceleration measured"
    },
    "jsDoc": "Sets the accelerometer sample range in gravities.",
    "_name": "setAccelerometerRange"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "range",
     "description": "a value describe the maximum strengh of acceleration measured",
     "type": "AcceleratorRange",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "setAccelerometerRange(null)",
   "qName": "input.setAccelerometerRange"
  },
  "Dimension": {
   "kind": 6,
   "namespace": "",
   "name": "Dimension",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Dimension"
   },
   "pkg": null,
   "retType": "Dimension",
   "parameters": null,
   "qName": "Dimension"
  },
  "Dimension.X": {
   "kind": 7,
   "namespace": "Dimension",
   "name": "X",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "x",
    "paramHelp": {},
    "jsDoc": "",
    "_name": "X"
   },
   "pkg": null,
   "retType": "Dimension",
   "parameters": null,
   "qName": "Dimension.X"
  },
  "Dimension.Y": {
   "kind": 7,
   "namespace": "Dimension",
   "name": "Y",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "y",
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Y"
   },
   "pkg": null,
   "retType": "Dimension",
   "parameters": null,
   "qName": "Dimension.Y"
  },
  "Dimension.Z": {
   "kind": 7,
   "namespace": "Dimension",
   "name": "Z",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "z",
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Z"
   },
   "pkg": null,
   "retType": "Dimension",
   "parameters": null,
   "qName": "Dimension.Z"
  },
  "Dimension.Strength": {
   "kind": 7,
   "namespace": "Dimension",
   "name": "Strength",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "strength",
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Strength"
   },
   "pkg": null,
   "retType": "Dimension",
   "parameters": null,
   "qName": "Dimension.Strength"
  },
  "Rotation": {
   "kind": 6,
   "namespace": "",
   "name": "Rotation",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Rotation"
   },
   "pkg": null,
   "retType": "Rotation",
   "parameters": null,
   "qName": "Rotation"
  },
  "Rotation.Pitch": {
   "kind": 7,
   "namespace": "Rotation",
   "name": "Pitch",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "pitch",
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Pitch"
   },
   "pkg": null,
   "retType": "Rotation",
   "parameters": null,
   "qName": "Rotation.Pitch"
  },
  "Rotation.Roll": {
   "kind": 7,
   "namespace": "Rotation",
   "name": "Roll",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "roll",
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Roll"
   },
   "pkg": null,
   "retType": "Rotation",
   "parameters": null,
   "qName": "Rotation.Roll"
  },
  "AcceleratorRange": {
   "kind": 6,
   "namespace": "",
   "name": "AcceleratorRange",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "AcceleratorRange"
   },
   "pkg": null,
   "retType": "AcceleratorRange",
   "parameters": null,
   "qName": "AcceleratorRange"
  },
  "AcceleratorRange.OneG": {
   "kind": 7,
   "namespace": "AcceleratorRange",
   "name": "OneG",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "1g",
    "paramHelp": {},
    "jsDoc": "The accelerator measures forces up to 1 gravity",
    "_name": "OneG"
   },
   "pkg": null,
   "retType": "AcceleratorRange",
   "parameters": null,
   "qName": "AcceleratorRange.OneG"
  },
  "AcceleratorRange.TwoG": {
   "kind": 7,
   "namespace": "AcceleratorRange",
   "name": "TwoG",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "2g",
    "paramHelp": {},
    "jsDoc": "The accelerator measures forces up to 2 gravity",
    "_name": "TwoG"
   },
   "pkg": null,
   "retType": "AcceleratorRange",
   "parameters": null,
   "qName": "AcceleratorRange.TwoG"
  },
  "AcceleratorRange.FourG": {
   "kind": 7,
   "namespace": "AcceleratorRange",
   "name": "FourG",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "4g",
    "paramHelp": {},
    "jsDoc": "The accelerator measures forces up to 4 gravity",
    "_name": "FourG"
   },
   "pkg": null,
   "retType": "AcceleratorRange",
   "parameters": null,
   "qName": "AcceleratorRange.FourG"
  },
  "AcceleratorRange.EightG": {
   "kind": 7,
   "namespace": "AcceleratorRange",
   "name": "EightG",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "8g",
    "paramHelp": {},
    "jsDoc": "The accelerator measures forces up to 8 gravity",
    "_name": "EightG"
   },
   "pkg": null,
   "retType": "AcceleratorRange",
   "parameters": null,
   "qName": "AcceleratorRange.EightG"
  },
  "Gesture": {
   "kind": 6,
   "namespace": "",
   "name": "Gesture",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Gesture"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture"
  },
  "Gesture.Shake": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "Shake",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "shake",
    "paramHelp": {},
    "jsDoc": "Raised when shaken",
    "_name": "Shake"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.Shake"
  },
  "Gesture.TiltUp": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "TiltUp",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "tilt up",
    "paramHelp": {},
    "jsDoc": "Raised when the device tilts up",
    "_name": "TiltUp"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.TiltUp"
  },
  "Gesture.TiltDown": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "TiltDown",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "tilt down",
    "paramHelp": {},
    "jsDoc": "Raised when the device tilts down",
    "_name": "TiltDown"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.TiltDown"
  },
  "Gesture.TiltLeft": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "TiltLeft",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "tilt left",
    "paramHelp": {},
    "jsDoc": "Raised when the screen is pointing left",
    "_name": "TiltLeft"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.TiltLeft"
  },
  "Gesture.TiltRight": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "TiltRight",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "tilt right",
    "paramHelp": {},
    "jsDoc": "Raised when the screen is pointing right",
    "_name": "TiltRight"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.TiltRight"
  },
  "Gesture.FaceUp": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "FaceUp",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "face up",
    "paramHelp": {},
    "jsDoc": "Raised when the screen faces up",
    "_name": "FaceUp"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.FaceUp"
  },
  "Gesture.FaceDown": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "FaceDown",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "face down",
    "paramHelp": {},
    "jsDoc": "Raised when the screen is pointing up and the board is horizontal",
    "_name": "FaceDown"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.FaceDown"
  },
  "Gesture.FreeFall": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "FreeFall",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "free fall",
    "paramHelp": {},
    "jsDoc": "Raised when the board is falling!",
    "_name": "FreeFall"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.FreeFall"
  },
  "Gesture.ThreeG": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "ThreeG",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "3g",
    "paramHelp": {},
    "jsDoc": "Raised when a 3G shock is detected",
    "_name": "ThreeG"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.ThreeG"
  },
  "Gesture.SixG": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "SixG",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "6g",
    "paramHelp": {},
    "jsDoc": "Raised when a 6G shock is detected",
    "_name": "SixG"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.SixG"
  },
  "Gesture.EightG": {
   "kind": 7,
   "namespace": "Gesture",
   "name": "EightG",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "block": "8g",
    "paramHelp": {},
    "jsDoc": "Raised when a 8G shock is detected",
    "_name": "EightG"
   },
   "pkg": null,
   "retType": "Gesture",
   "parameters": null,
   "qName": "Gesture.EightG"
  }
 },
 "jres": {}
}