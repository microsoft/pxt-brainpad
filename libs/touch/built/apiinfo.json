{
 "byQName": {
  "AnalogPin": {
   "kind": 9,
   "namespace": "",
   "name": "AnalogPin",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "noRefCounting": "true",
    "fixedInstances": "true",
    "paramHelp": {},
    "jsDoc": ""
   },
   "pkg": null,
   "extendsTypes": [
    "AnalogPin",
    "DigitalPin"
   ],
   "retType": "AnalogPin",
   "parameters": null,
   "qName": "AnalogPin"
  },
  "TouchButton": {
   "kind": 9,
   "namespace": "",
   "name": "TouchButton",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "noRefCounting": "true",
    "fixedInstances": "true",
    "paramHelp": {},
    "jsDoc": ""
   },
   "pkg": null,
   "extendsTypes": [
    "TouchButton",
    "Button"
   ],
   "retType": "TouchButton",
   "parameters": null,
   "qName": "TouchButton"
  },
  "TouchButton.setThreshold": {
   "kind": 1,
   "namespace": "TouchButton",
   "name": "setThreshold",
   "attributes": {
    "paramDefl": {
     "threshold": "200"
    },
    "callingConvention": 0,
    "_source": null,
    "blockId": "touch_set_threshold",
    "block": "button %button|set threshold %threshold",
    "blockNamespace": "input",
    "paramFieldEditor": {
     "name": "gridpicker"
    },
    "paramFieldEditorOptions": {
     "name": {
      "width": "220",
      "columns": "4"
     }
    },
    "group": "More",
    "weight": 16,
    "blockGap": "8",
    "help": "input/touch/set-threshold",
    "shim": "TouchButtonMethods::setThreshold",
    "paramHelp": {
     "name": "button name",
     "threshold": "minimum value to consider a touch eg:200"
    },
    "jsDoc": "Manually define the threshold use to detect a touch event. Any sensed value equal to or greater than this value will be interpreted as a touch.",
    "_name": "setThreshold"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "threshold",
     "description": "minimum value to consider a touch eg:200",
     "type": "number",
     "initializer": "200",
     "default": "200",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "setThreshold(200)",
   "qName": "TouchButton.setThreshold"
  },
  "TouchButton.value": {
   "kind": 1,
   "namespace": "TouchButton",
   "name": "value",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "touch_value",
    "block": "button %button|value",
    "blockNamespace": "input",
    "paramFieldEditor": {
     "name": "gridpicker"
    },
    "paramFieldEditorOptions": {
     "name": {
      "width": "220",
      "columns": "4"
     }
    },
    "group": "More",
    "weight": 49,
    "blockGap": "8",
    "help": "input/touch/value",
    "shim": "TouchButtonMethods::value",
    "paramHelp": {
     "name": "button name"
    },
    "jsDoc": "Reads the current value registered with the button.",
    "_name": "value"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [],
   "snippet": "value()",
   "qName": "TouchButton.value"
  },
  "AnalogPin.touchButton": {
   "kind": 1,
   "namespace": "AnalogPin",
   "name": "touchButton",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "AnalogPinMethods::touchButton",
    "paramHelp": {},
    "jsDoc": "Get the cap-touch sensor for given pin (if available)",
    "_name": "touchButton"
   },
   "pkg": null,
   "retType": "TouchButton",
   "parameters": [],
   "snippet": "touchButton()",
   "qName": "AnalogPin.touchButton"
  }
 },
 "jres": {}
}